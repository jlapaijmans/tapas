# Don't delete files if this script should be executed non-interactively
set -ueC

d_sam="$(readlink -f 04_out/out/run)"
d_fasta_records="$(readlink -f 01_out/genome_data)"
scd="$pr/scripts"

s_sam_extract="$scd/eval/sam-extract.R"
s_sensspec="$scd/eval/sensspec.R"
s_add_const_column="$scd/general/add_const_column.sh"
s_pocketr="$scd/general/pocketR.R"

mkdir 05_out
cd 05_out

awk '(FNR==NR || FNR!=1)' $d_fasta_records/*.records > records

function sam_stats(){
    run=$1
    $s_sam_extract --sam-fields qname,rname,pos,mapq   \
                   --pattern "{torg}_{tchr}_{tpos}_.*" \
                   --gz  \
                   "$d_sam/${run}.sam.gz" > ${run}.tab

    $s_add_const_column ${run}.tab run ${run}

    $s_pocketr --na "*" '
        # Infer true chromosome names ("true rname") from tchr field
        o <- merge(inputs[[1]], inputs[[2]], 
        by.x=c("tchr", "torg"), 
        by.y=c("chr.i", "organism"), all.x=TRUE)

        colnames(o)[colnames(o) == "chr.name"] <- "tchrname"

        # Infer the organism the read was mapped to from the rname field
        o <- merge(o, inputs[[2]][,c("chr.name","organism")], 
                   by.x="rname", by.y="chr.name", all.x=TRUE)

        o$correct <- with(o,{ tchrname == rname & tpos == pos })
        o$correct[is.na(o$correct)] <- FALSE

        return(o)' \
        ${run}.tab records  > ${run}.tab.tmp &&

        mv ${run}.tab.tmp ${run}.tab
}

for f in $d_sam/*.sam.gz;do
    echo $f ...
    n="$(basename "$f")"
    i=${n%.sam.gz}
    sam_stats $i
done





# vim: ft=sh

